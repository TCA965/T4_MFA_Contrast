
C:\Users\THADDA~1\AppData\Local\Temp\arduino_build_89470/Attiny_KI_MFA_2.0.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
   0:	4a c0       	rjmp	.+148    	; 0x96 <__ctors_end>
   2:	64 c0       	rjmp	.+200    	; 0xcc <__bad_interrupt>
   4:	63 c0       	rjmp	.+198    	; 0xcc <__bad_interrupt>
   6:	62 c0       	rjmp	.+196    	; 0xcc <__bad_interrupt>
   8:	61 c0       	rjmp	.+194    	; 0xcc <__bad_interrupt>
   a:	e7 c0       	rjmp	.+462    	; 0x1da <__vector_5>
   c:	5f c0       	rjmp	.+190    	; 0xcc <__bad_interrupt>
   e:	5e c0       	rjmp	.+188    	; 0xcc <__bad_interrupt>
  10:	5d c0       	rjmp	.+186    	; 0xcc <__bad_interrupt>
  12:	5c c0       	rjmp	.+184    	; 0xcc <__bad_interrupt>
  14:	5b c0       	rjmp	.+182    	; 0xcc <__bad_interrupt>
  16:	5a c0       	rjmp	.+180    	; 0xcc <__bad_interrupt>
  18:	59 c0       	rjmp	.+178    	; 0xcc <__bad_interrupt>
  1a:	58 c0       	rjmp	.+176    	; 0xcc <__bad_interrupt>
  1c:	57 c0       	rjmp	.+174    	; 0xcc <__bad_interrupt>
  1e:	08 00       	.word	0x0008	; ????
  20:	00 00       	nop
  22:	be 92       	st	-X, r11
  24:	24 49       	sbci	r18, 0x94	; 148
  26:	12 3e       	cpi	r17, 0xE2	; 226
  28:	ab aa       	std	Y+51, r10	; 0x33
  2a:	aa 2a       	or	r10, r26
  2c:	be cd       	rjmp	.-1156   	; 0xfffffbaa <__eeprom_end+0xff7efbaa>
  2e:	cc cc       	rjmp	.-1640   	; 0xfffff9c8 <__eeprom_end+0xff7ef9c8>
  30:	4c 3e       	cpi	r20, 0xEC	; 236
  32:	00 00       	nop
  34:	00 80       	ld	r0, Z
  36:	be ab       	std	Y+54, r27	; 0x36
  38:	aa aa       	std	Y+50, r10	; 0x32
  3a:	aa 3e       	cpi	r26, 0xEA	; 234
  3c:	00 00       	nop
  3e:	00 00       	nop
  40:	bf 00       	.word	0x00bf	; ????
  42:	00 00       	nop
  44:	80 3f       	cpi	r24, 0xF0	; 240
  46:	00 00       	nop
  48:	00 00       	nop
  4a:	00 08       	sbc	r0, r0
  4c:	41 78       	andi	r20, 0x81	; 129
  4e:	d3 bb       	out	0x13, r29	; 19
  50:	43 87       	std	Z+11, r20	; 0x0b
  52:	d1 13       	cpse	r29, r17
  54:	3d 19       	sub	r19, r13
  56:	0e 3c       	cpi	r16, 0xCE	; 206
  58:	c3 bd       	out	0x23, r28	; 35
  5a:	42 82       	std	Z+2, r4	; 0x02
  5c:	ad 2b       	or	r26, r29
  5e:	3e 68       	ori	r19, 0x8E	; 142
  60:	ec 82       	std	Y+4, r14	; 0x04
  62:	76 be       	out	0x36, r7	; 54
  64:	d9 8f       	std	Y+25, r29	; 0x19
  66:	e1 a9       	ldd	r30, Z+49	; 0x31
  68:	3e 4c       	sbci	r19, 0xCE	; 206
  6a:	80 ef       	ldi	r24, 0xF0	; 240
  6c:	ff be       	out	0x3f, r15	; 63
  6e:	01 c4       	rjmp	.+2050   	; 0x872 <log+0x36>
  70:	ff 7f       	andi	r31, 0xFF	; 255
  72:	3f 00       	.word	0x003f	; ????
  74:	00 00       	nop
	...

00000078 <__trampolines_end>:
__trampolines_start():
  78:	00 00       	nop
  7a:	00 00       	nop
  7c:	37 00       	.word	0x0037	; ????

0000007e <port_to_output_PGM>:
  7e:	00 00 00 00 38 00                                   ....8.

00000084 <digital_pin_to_port_PGM>:
  84:	02 02 02 02 02 02                                   ......

0000008a <digital_pin_to_bit_mask_PGM>:
  8a:	01 02 04 08 10 20                                   ..... 

00000090 <digital_pin_to_timer_PGM>:
  90:	01 02 00 00 04 00                                   ......

00000096 <__ctors_end>:
__dtors_end():
  96:	11 24       	eor	r1, r1
  98:	1f be       	out	0x3f, r1	; 63
  9a:	cf e5       	ldi	r28, 0x5F	; 95
  9c:	d1 e0       	ldi	r29, 0x01	; 1
  9e:	de bf       	out	0x3e, r29	; 62
  a0:	cd bf       	out	0x3d, r28	; 61

000000a2 <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
  a2:	10 e0       	ldi	r17, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
  a4:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
  a6:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
  a8:	ec ef       	ldi	r30, 0xFC	; 252
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
  aa:	f9 e0       	ldi	r31, 0x09	; 9
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <__do_copy_data+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
  ae:	05 90       	lpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
  b0:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
  b2:	a0 36       	cpi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
  b4:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
  b6:	d9 f7       	brne	.-10     	; 0xae <__do_copy_data+0xc>

000000b8 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
  b8:	20 e0       	ldi	r18, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
  ba:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
  bc:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
  be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
  c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
  c2:	ad 36       	cpi	r26, 0x6D	; 109
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
  c4:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
  c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>
.do_clear_bss_start():
  c8:	d2 d0       	rcall	.+420    	; 0x26e <main>
  ca:	96 c4       	rjmp	.+2348   	; 0x9f8 <_exit>

000000cc <__bad_interrupt>:
__vector_1():
  cc:	99 cf       	rjmp	.-206    	; 0x0 <__vectors>

000000ce <digitalWrite.constprop.4>:
digitalWrite.constprop.4():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:139
}

void digitalWrite(uint8_t pin, uint8_t val)
{
  if (pin&128) {pin=analogInputToDigitalPin((pin&127));}
  uint8_t timer = digitalPinToTimer(pin);
  ce:	e0 e9       	ldi	r30, 0x90	; 144
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	24 91       	lpm	r18, Z
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:140
  uint8_t bit = digitalPinToBitMask(pin);
  d4:	ea e8       	ldi	r30, 0x8A	; 138
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	94 91       	lpm	r25, Z
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:141
  uint8_t port = digitalPinToPort(pin);
  da:	e4 e8       	ldi	r30, 0x84	; 132
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	e4 91       	lpm	r30, Z
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:144
  volatile uint8_t *out;

  if (port == NOT_A_PIN) return;
  e0:	ee 23       	and	r30, r30
  e2:	c1 f0       	breq	.+48     	; 0x114 <digitalWrite.constprop.4+0x46>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:148

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
  e4:	22 23       	and	r18, r18
  e6:	29 f0       	breq	.+10     	; 0xf2 <digitalWrite.constprop.4+0x24>
turnOffPWM():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:67
}

static void turnOffPWM(uint8_t timer)
{
  #if defined(TCCR0A) && defined(COM0A1)
  if( timer == TIMER0A){
  e8:	21 30       	cpi	r18, 0x01	; 1
  ea:	a9 f4       	brne	.+42     	; 0x116 <digitalWrite.constprop.4+0x48>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:68
    cbi(TCCR0A, COM0A1);
  ec:	2a b5       	in	r18, 0x2a	; 42
  ee:	2f 77       	andi	r18, 0x7F	; 127
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:75
  } else
  #endif

  #if defined(TCCR0A) && defined(COM0B1)
  if( timer == TIMER0B){
    cbi(TCCR0A, COM0B1);
  f0:	2a bd       	out	0x2a, r18	; 42
digitalWrite.constprop.4():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:150

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);

  out = portOutputRegister(port);
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	ee 0f       	add	r30, r30
  f6:	ff 1f       	adc	r31, r31
  f8:	e2 58       	subi	r30, 0x82	; 130
  fa:	ff 4f       	sbci	r31, 0xFF	; 255
  fc:	a5 91       	lpm	r26, Z+
  fe:	b4 91       	lpm	r27, Z
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:152

  if (val == LOW) {
 100:	81 11       	cpse	r24, r1
 102:	1a c0       	rjmp	.+52     	; 0x138 <digitalWrite.constprop.4+0x6a>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:153
    uint8_t oldSREG = SREG;
 104:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:154
    cli();
 106:	f8 94       	cli
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:155
    *out &= ~bit;
 108:	2c 91       	ld	r18, X
 10a:	e9 2f       	mov	r30, r25
 10c:	e0 95       	com	r30
 10e:	e2 23       	and	r30, r18
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:160
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
    cli();
    *out |= bit;
 110:	ec 93       	st	X, r30
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:161
    SREG = oldSREG;
 112:	8f bf       	out	0x3f, r24	; 63
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:163
  }
}
 114:	08 95       	ret
turnOffPWM():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:74
    //cbi(TCCR0A, COM0A0);
  } else
  #endif

  #if defined(TCCR0A) && defined(COM0B1)
  if( timer == TIMER0B){
 116:	22 30       	cpi	r18, 0x02	; 2
 118:	19 f4       	brne	.+6      	; 0x120 <digitalWrite.constprop.4+0x52>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:75
    cbi(TCCR0A, COM0B1);
 11a:	2a b5       	in	r18, 0x2a	; 42
 11c:	2f 7d       	andi	r18, 0xDF	; 223
 11e:	e8 cf       	rjmp	.-48     	; 0xf0 <digitalWrite.constprop.4+0x22>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:105
    cbi(TCCR1C,COM1D0);
    //cbi(TCCR1A,PWM1D);
  } else
    #endif
  #if defined(TCCR1) && defined(COM1A1)
  if(timer == TIMER1A){
 120:	23 30       	cpi	r18, 0x03	; 3
 122:	21 f4       	brne	.+8      	; 0x12c <digitalWrite.constprop.4+0x5e>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:106
    cbi(TCCR1, COM1A1);
 124:	20 b7       	in	r18, 0x30	; 48
 126:	2f 7d       	andi	r18, 0xDF	; 223
 128:	20 bf       	out	0x30, r18	; 48
 12a:	e3 cf       	rjmp	.-58     	; 0xf2 <digitalWrite.constprop.4+0x24>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:125
  #endif
  } else
  #endif

  #if defined(TCCR1) && defined(COM1B1)
  if( timer == TIMER1B){
 12c:	24 30       	cpi	r18, 0x04	; 4
 12e:	09 f7       	brne	.-62     	; 0xf2 <digitalWrite.constprop.4+0x24>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:126
    cbi(GTCCR, COM1B1);
 130:	2c b5       	in	r18, 0x2c	; 44
 132:	2f 7d       	andi	r18, 0xDF	; 223
 134:	2c bd       	out	0x2c, r18	; 44
 136:	dd cf       	rjmp	.-70     	; 0xf2 <digitalWrite.constprop.4+0x24>
digitalWrite.constprop.4():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:158
    uint8_t oldSREG = SREG;
    cli();
    *out &= ~bit;
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
 138:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:159
    cli();
 13a:	f8 94       	cli
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:160
    *out |= bit;
 13c:	ec 91       	ld	r30, X
 13e:	e9 2b       	or	r30, r25
 140:	e7 cf       	rjmp	.-50     	; 0x110 <digitalWrite.constprop.4+0x42>

00000142 <pinMode.constprop.3>:
pinMode.constprop.3():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:35
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
  if (pin&128) {pin=analogInputToDigitalPin((pin&127));}
  uint8_t bit = digitalPinToBitMask(pin);
 142:	ea e8       	ldi	r30, 0x8A	; 138
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	24 91       	lpm	r18, Z
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:36
  uint8_t port = digitalPinToPort(pin);
 148:	e4 e8       	ldi	r30, 0x84	; 132
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	84 91       	lpm	r24, Z
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:39
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
 14e:	88 23       	and	r24, r24
 150:	99 f0       	breq	.+38     	; 0x178 <__stack+0x19>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:41

  reg = portModeRegister(port);
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	fc 01       	movw	r30, r24
 15a:	e8 58       	subi	r30, 0x88	; 136
 15c:	ff 4f       	sbci	r31, 0xFF	; 255
 15e:	a5 91       	lpm	r26, Z+
 160:	b4 91       	lpm	r27, Z
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:42
  out = portOutputRegister(port);
 162:	fc 01       	movw	r30, r24
 164:	e2 58       	subi	r30, 0x82	; 130
 166:	ff 4f       	sbci	r31, 0xFF	; 255
 168:	85 91       	lpm	r24, Z+
 16a:	94 91       	lpm	r25, Z
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:57
                cli();
    *reg &= ~bit;
    *out |= bit;
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
 16c:	8f b7       	in	r24, 0x3f	; 63
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:58
                cli();
 16e:	f8 94       	cli
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:59
    *reg |= bit;
 170:	ec 91       	ld	r30, X
 172:	e2 2b       	or	r30, r18
 174:	ec 93       	st	X, r30
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:60
    SREG = oldSREG;
 176:	8f bf       	out	0x3f, r24	; 63
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_digital.c:62
  }
}
 178:	08 95       	ret

0000017a <analogRead>:
analogRead():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:72
  #ifndef ADCSRA
  return digitalRead(analogInputToDigitalPin(pin)) ? 1023 : 0; //No ADC, so read as a digital pin instead.
  #endif

  #if defined(ADMUX)
  ADMUX = ((analog_reference & ADMUX_REFS_MASK) << REFS0) | ((pin & ADMUX_MUX_MASK) << MUX0); //select the channel and reference
 17a:	8f 70       	andi	r24, 0x0F	; 15
 17c:	87 b9       	out	0x07, r24	; 7
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:74
  #if defined(REFS2)
  ADMUX |= (((analog_reference & 0x04) >> 2) << REFS2); //some have an extra reference bit in a weird position.
 17e:	87 b1       	in	r24, 0x07	; 7
 180:	87 b9       	out	0x07, r24	; 7
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:79
  #endif
  #endif

  #if defined(HAVE_ADC) && HAVE_ADC
  sbi(ADCSRA, ADSC); //Start conversion
 182:	36 9a       	sbi	0x06, 6	; 6
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:81

  while(ADCSRA & (1<<ADSC)); //Wait for conversion to complete.
 184:	36 99       	sbic	0x06, 6	; 6
 186:	fe cf       	rjmp	.-4      	; 0x184 <analogRead+0xa>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:83

  uint8_t low = ADCL;
 188:	84 b1       	in	r24, 0x04	; 4
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:84
  uint8_t high = ADCH;
 18a:	95 b1       	in	r25, 0x05	; 5
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:89
  return (high << 8) | low;
  #else
  return LOW;
  #endif
}
 18c:	08 95       	ret

0000018e <micros>:
micros():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:190
}

unsigned long micros()
{
  unsigned long m;
  uint8_t oldSREG = SREG, t;
 18e:	3f b7       	in	r19, 0x3f	; 63
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:192

  cli();
 190:	f8 94       	cli
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:193
  m = millis_timer_overflow_count;
 192:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <millis_timer_overflow_count>
 196:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <millis_timer_overflow_count+0x1>
 19a:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <millis_timer_overflow_count+0x2>
 19e:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <millis_timer_overflow_count+0x3>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:195
#if defined(TCNT0) && (TIMER_TO_USE_FOR_MILLIS == 0) && !defined(TCW0)
  t = TCNT0;
 1a2:	22 b7       	in	r18, 0x32	; 50
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:210

#if defined(TIFR0) && (TIMER_TO_USE_FOR_MILLIS == 0)
  if ((TIFR0 & _BV(TOV0)) && (t < 255))
    m++;
#elif defined(TIFR) && (TIMER_TO_USE_FOR_MILLIS == 0)
  if ((TIFR & _BV(TOV0)) && (t < 255))
 1a4:	08 b6       	in	r0, 0x38	; 56
 1a6:	01 fe       	sbrs	r0, 1
 1a8:	05 c0       	rjmp	.+10     	; 0x1b4 <micros+0x26>
 1aa:	2f 3f       	cpi	r18, 0xFF	; 255
 1ac:	19 f0       	breq	.+6      	; 0x1b4 <micros+0x26>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:211
    m++;
 1ae:	01 96       	adiw	r24, 0x01	; 1
 1b0:	a1 1d       	adc	r26, r1
 1b2:	b1 1d       	adc	r27, r1
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:220
#elif defined(TIFR) && (TIMER_TO_USE_FOR_MILLIS == 1)
  if ((TIFR & _BV(TOV1)) && (t < 255))
    m++;
#endif

  SREG = oldSREG;
 1b4:	3f bf       	out	0x3f, r19	; 63
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:227

#if F_CPU < 1000000L
  return ((m << 8) + t) * MillisTimer_Prescale_Value * (1000000L/F_CPU);
#else
#if (MillisTimer_Prescale_Value % clockCyclesPerMicrosecond() == 0 ) // Can we just do it the naive way? If so great!
  return ((m << 8) + t) * (MillisTimer_Prescale_Value / clockCyclesPerMicrosecond());
 1b6:	ba 2f       	mov	r27, r26
 1b8:	a9 2f       	mov	r26, r25
 1ba:	98 2f       	mov	r25, r24
 1bc:	88 27       	eor	r24, r24
 1be:	bc 01       	movw	r22, r24
 1c0:	cd 01       	movw	r24, r26
 1c2:	62 0f       	add	r22, r18
 1c4:	71 1d       	adc	r23, r1
 1c6:	81 1d       	adc	r24, r1
 1c8:	91 1d       	adc	r25, r1
 1ca:	43 e0       	ldi	r20, 0x03	; 3
 1cc:	66 0f       	add	r22, r22
 1ce:	77 1f       	adc	r23, r23
 1d0:	88 1f       	adc	r24, r24
 1d2:	99 1f       	adc	r25, r25
 1d4:	4a 95       	dec	r20
 1d6:	d1 f7       	brne	.-12     	; 0x1cc <micros+0x3e>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:270
  //the high part gets divided by cCPuS then multiplied by the prescaler. Then take the low 8 bits plus the high part modulo-cCPuS to correct for the division, then multiply that by the prescaler value first before dividing by cCPuS, and finally add the two together.
  //return ((m << 8 )/clockCyclesPerMicrosecond()* MillisTimer_Prescale_Value) + ((t+(((m<<8)%clockCyclesPerMicrosecond())) * MillisTimer_Prescale_Value / clockCyclesPerMicrosecond()));
  return ((m << 8 )/clockCyclesPerMicrosecond()* MillisTimer_Prescale_Value) + (t * MillisTimer_Prescale_Value / clockCyclesPerMicrosecond());
#endif
#endif
}
 1d8:	08 95       	ret

000001da <__vector_5>:
__vector_5():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:133
#else

#error Millis() timer not defined!

#endif
{
 1da:	1f 92       	push	r1
 1dc:	0f 92       	push	r0
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	2f 93       	push	r18
 1e6:	3f 93       	push	r19
 1e8:	8f 93       	push	r24
 1ea:	9f 93       	push	r25
 1ec:	af 93       	push	r26
 1ee:	bf 93       	push	r27
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:136
  // copy these to local variables so they can be stored in registers
  // (volatile variables must be read from memory on every access)
  unsigned long m = millis_timer_millis;
 1f0:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <millis_timer_millis>
 1f4:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <millis_timer_millis+0x1>
 1f8:	a0 91 63 00 	lds	r26, 0x0063	; 0x800063 <millis_timer_millis+0x2>
 1fc:	b0 91 64 00 	lds	r27, 0x0064	; 0x800064 <millis_timer_millis+0x3>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:137
  unsigned char f = millis_timer_fract;
 200:	30 91 60 00 	lds	r19, 0x0060	; 0x800060 <__data_end>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:149
    f -= FRACT_MAX;
    m += 1;
  }
...rmv */

  f += FRACT_INC;
 204:	26 e0       	ldi	r18, 0x06	; 6
 206:	23 0f       	add	r18, r19
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:151

  if (f >= FRACT_MAX)
 208:	2d 37       	cpi	r18, 0x7D	; 125
 20a:	68 f1       	brcs	.+90     	; 0x266 <__vector_5+0x8c>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:153
  {
    f -= FRACT_MAX;
 20c:	29 e8       	ldi	r18, 0x89	; 137
 20e:	23 0f       	add	r18, r19
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:155
  m += 1;
    m += MILLIS_INC;
 210:	03 96       	adiw	r24, 0x03	; 3
 212:	a1 1d       	adc	r26, r1
 214:	b1 1d       	adc	r27, r1
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:162
  else
  {
    m += MILLIS_INC;
  }

  millis_timer_fract = f;
 216:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <__data_end>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:163
  millis_timer_millis = m;
 21a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <millis_timer_millis>
 21e:	90 93 62 00 	sts	0x0062, r25	; 0x800062 <millis_timer_millis+0x1>
 222:	a0 93 63 00 	sts	0x0063, r26	; 0x800063 <millis_timer_millis+0x2>
 226:	b0 93 64 00 	sts	0x0064, r27	; 0x800064 <millis_timer_millis+0x3>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:164
  millis_timer_overflow_count++;
 22a:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <millis_timer_overflow_count>
 22e:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <millis_timer_overflow_count+0x1>
 232:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <millis_timer_overflow_count+0x2>
 236:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <millis_timer_overflow_count+0x3>
 23a:	01 96       	adiw	r24, 0x01	; 1
 23c:	a1 1d       	adc	r26, r1
 23e:	b1 1d       	adc	r27, r1
 240:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <millis_timer_overflow_count>
 244:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <millis_timer_overflow_count+0x1>
 248:	a0 93 67 00 	sts	0x0067, r26	; 0x800067 <millis_timer_overflow_count+0x2>
 24c:	b0 93 68 00 	sts	0x0068, r27	; 0x800068 <millis_timer_overflow_count+0x3>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:171

//MICROSECONDS_PER_MILLIS_OVERFLOW=2048
//MILLIS_INC=2
//FRACT_INC=6
//FRACT_MAX=125
}
 250:	bf 91       	pop	r27
 252:	af 91       	pop	r26
 254:	9f 91       	pop	r25
 256:	8f 91       	pop	r24
 258:	3f 91       	pop	r19
 25a:	2f 91       	pop	r18
 25c:	0f 90       	pop	r0
 25e:	0f be       	out	0x3f, r0	; 63
 260:	0f 90       	pop	r0
 262:	1f 90       	pop	r1
 264:	18 95       	reti
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:159
  m += 1;
    m += MILLIS_INC;
  }
  else
  {
    m += MILLIS_INC;
 266:	02 96       	adiw	r24, 0x02	; 2
 268:	a1 1d       	adc	r26, r1
 26a:	b1 1d       	adc	r27, r1
 26c:	d4 cf       	rjmp	.-88     	; 0x216 <__vector_5+0x3c>

0000026e <main>:
main():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/main.cpp:6
#include <Arduino.h>

int main(void)
{
  #ifdef TUNED_OSCCAL_VALUE
  OSCCAL = TUNED_OSCCAL_VALUE; //set the oscillator calibration value based on the pins_arduino.h file. If this is not set, it will be optimised away
 26e:	81 b7       	in	r24, 0x31	; 49
 270:	81 bf       	out	0x31, r24	; 49
init():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:699
    } else {
      OSCCAL += 5;
    }
  }
  #endif
  sei();
 272:	78 94       	sei
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:831
  #endif
  #endif

  // Use the Millis Timer for fast PWM (unless it doesn't have an output).
  #if (TIMER_TO_USE_FOR_MILLIS == 0) && defined(WGM01)
  sbi(TCCR0A, WGM01);
 274:	8a b5       	in	r24, 0x2a	; 42
 276:	82 60       	ori	r24, 0x02	; 2
 278:	8a bd       	out	0x2a, r24	; 42
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:832
  sbi(TCCR0A, WGM00);
 27a:	8a b5       	in	r24, 0x2a	; 42
 27c:	81 60       	ori	r24, 0x01	; 1
 27e:	8a bd       	out	0x2a, r24	; 42
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:855
  #endif

  // Millis timer is always processor clock divided by MillisTimer_Prescale_Value (64)
  #if (TIMER_TO_USE_FOR_MILLIS == 0)
   #ifdef TCCR0B
    TCCR0B = (TCCR0B & ~((1<<CS02)|(1<<CS01)|(1<<CS00))) | (MillisTimer_Prescale_Index << CS00);
 280:	83 b7       	in	r24, 0x33	; 51
 282:	88 7f       	andi	r24, 0xF8	; 248
 284:	83 60       	ori	r24, 0x03	; 3
 286:	83 bf       	out	0x33, r24	; 51
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:867
  TCCR1B = (TCCR1B & ~((1<<CS13)|(1<<CS12)|(1<<CS11)|(1<<CS10))) | (MillisTimer_Prescale_Index << CS10);
  #elif (TIMER_TO_USE_FOR_MILLIS == 1)
  TCCR1B = (TCCR1B & ~((1<<CS12)|(1<<CS11)|(1<<CS10))) | (MillisTimer_Prescale_Index << CS10);
  #endif
  // this needs to be called before setup() or some functions won't work there
  sei();
 288:	78 94       	sei
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:872

  #ifndef DISABLEMILLIS
  // Enable the overlow interrupt (this is the basic system tic-toc for millis)
  #if defined(TIMSK) && defined(TOIE0) && (TIMER_TO_USE_FOR_MILLIS == 0)
  sbi(TIMSK, TOIE0);
 28a:	89 b7       	in	r24, 0x39	; 57
 28c:	82 60       	ori	r24, 0x02	; 2
 28e:	89 bf       	out	0x39, r24	; 57
initToneTimerInternal():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:507
  TCCR0B |= (ToneTimer_Prescale_Index << CS00);
  #elif defined(__AVR_ATtiny43__)
  TCCR1A = 3; //WGM 10=1, WGM11=1
  TCCR1B = 3; //prescaler of 64
  #elif (TIMER_TO_USE_FOR_TONE == 1) && defined(TCCR1)
  TCCR1 &= ~((1<<CS13) | (1<<CS12) | (1<<CS11) | (1<<CS10)); //stop the clock to configure
 290:	80 b7       	in	r24, 0x30	; 48
 292:	80 7f       	andi	r24, 0xF0	; 240
 294:	80 bf       	out	0x30, r24	; 48
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:509
  // Use the Tone Timer for fast PWM as phase correct not supported by this timer
  sbi(TCCR1, CTC1);
 296:	80 b7       	in	r24, 0x30	; 48
 298:	80 68       	ori	r24, 0x80	; 128
 29a:	80 bf       	out	0x30, r24	; 48
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:511
  //#if !defined(__AVR_ATtiny85__)
  sbi(TCCR1, PWM1A); //for the tiny 85, Timer0 is used instead.
 29c:	80 b7       	in	r24, 0x30	; 48
 29e:	80 64       	ori	r24, 0x40	; 64
 2a0:	80 bf       	out	0x30, r24	; 48
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:513
  //#endif
  sbi(GTCCR, PWM1B);
 2a2:	8c b5       	in	r24, 0x2c	; 44
 2a4:	80 64       	ori	r24, 0x40	; 64
 2a6:	8c bd       	out	0x2c, r24	; 44
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:514
  OCR1C = 0xFF; //Use 255 as the top to match with the others as this module doesn't have a 8bit PWM mode.
 2a8:	8f ef       	ldi	r24, 0xFF	; 255
 2aa:	8d bd       	out	0x2d, r24	; 45
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:515
  TCCR1 |= (ToneTimer_Prescale_Index << CS10);
 2ac:	80 b7       	in	r24, 0x30	; 48
 2ae:	87 60       	ori	r24, 0x07	; 7
 2b0:	80 bf       	out	0x30, r24	; 48
init():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:893

  // Initialize the ADC
  #if defined( INITIALIZE_ANALOG_TO_DIGITAL_CONVERTER ) && INITIALIZE_ANALOG_TO_DIGITAL_CONVERTER
  #if defined(ADCSRA)
    // set a2d prescale factor
  ADCSRA = (ADCSRA & ~((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0))) | (ADC_ARDUINO_PRESCALER << ADPS0) | (1<<ADEN);
 2b2:	86 b1       	in	r24, 0x06	; 6
 2b4:	88 77       	andi	r24, 0x78	; 120
 2b6:	86 68       	ori	r24, 0x86	; 134
 2b8:	86 b9       	out	0x06, r24	; 6
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:895
    // enable a2d conversions
    sbi(ADCSRA, ADEN);
 2ba:	37 9a       	sbi	0x06, 7	; 6
setup():
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:14

int lm317 = 0;
const int PWM_Out = 0;

void setup() {
  pinMode(PWM_Out,OUTPUT);
 2bc:	42 df       	rcall	.-380    	; 0x142 <pinMode.constprop.3>
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:15
  digitalWrite(PWM_Out, HIGH);
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	06 df       	rcall	.-500    	; 0xce <digitalWrite.constprop.4>
delay():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:282
void yield(void) __attribute__ ((weak, alias("__empty")));

void delay(unsigned long ms)
{
  #if (F_CPU>=1000000L)
  uint16_t start = (uint16_t)micros();
 2c2:	65 df       	rcall	.-310    	; 0x18e <micros>
 2c4:	eb 01       	movw	r28, r22
 2c6:	20 ed       	ldi	r18, 0xD0	; 208
 2c8:	c2 2e       	mov	r12, r18
 2ca:	27 e0       	ldi	r18, 0x07	; 7
 2cc:	d2 2e       	mov	r13, r18
 2ce:	e1 2c       	mov	r14, r1
 2d0:	f1 2c       	mov	r15, r1
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:286

  while (ms > 0) {
    yield();
    while (((uint16_t)micros() - start) >= 1000 && ms) {
 2d2:	5d df       	rcall	.-326    	; 0x18e <micros>
 2d4:	6c 1b       	sub	r22, r28
 2d6:	7d 0b       	sbc	r23, r29
 2d8:	68 3e       	cpi	r22, 0xE8	; 232
 2da:	73 40       	sbci	r23, 0x03	; 3
 2dc:	08 f0       	brcs	.+2      	; 0x2e0 <main+0x72>
 2de:	91 c0       	rjmp	.+290    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:284
void delay(unsigned long ms)
{
  #if (F_CPU>=1000000L)
  uint16_t start = (uint16_t)micros();

  while (ms > 0) {
 2e0:	c1 14       	cp	r12, r1
 2e2:	d1 04       	cpc	r13, r1
 2e4:	e1 04       	cpc	r14, r1
 2e6:	f1 04       	cpc	r15, r1
 2e8:	a1 f7       	brne	.-24     	; 0x2d2 <main+0x64>
map():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/WMath.cpp:56
  return random(diff) + howsmall;
}

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 2ea:	44 24       	eor	r4, r4
 2ec:	4a 94       	dec	r4
 2ee:	83 e0       	ldi	r24, 0x03	; 3
 2f0:	58 2e       	mov	r5, r24
 2f2:	61 2c       	mov	r6, r1
 2f4:	71 2c       	mov	r7, r1
analogWrite():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:113
  {
    digitalWrite(pin, HIGH);
  }
  else
  {
    uint8_t timer = digitalPinToTimer(pin);
 2f6:	90 e9       	ldi	r25, 0x90	; 144
 2f8:	29 2e       	mov	r2, r25
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	39 2e       	mov	r3, r25
loop():
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:29


void loop() {
  // put your main code here, to run repeatedly:

 Vo = analogRead(ThermistorPin);
 2fe:	83 e8       	ldi	r24, 0x83	; 131
 300:	3c df       	rcall	.-392    	; 0x17a <analogRead>
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:30
  R2 = R1 * (1023.0 / (float)Vo - 1.0);
 302:	bc 01       	movw	r22, r24
 304:	99 0f       	add	r25, r25
 306:	88 0b       	sbc	r24, r24
 308:	99 0b       	sbc	r25, r25
 30a:	07 d2       	rcall	.+1038   	; 0x71a <__floatsisf>
 30c:	9b 01       	movw	r18, r22
 30e:	ac 01       	movw	r20, r24
 310:	60 e0       	ldi	r22, 0x00	; 0
 312:	70 ec       	ldi	r23, 0xC0	; 192
 314:	8f e7       	ldi	r24, 0x7F	; 127
 316:	94 e4       	ldi	r25, 0x44	; 68
 318:	65 d1       	rcall	.+714    	; 0x5e4 <__divsf3>
 31a:	20 e0       	ldi	r18, 0x00	; 0
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	40 e8       	ldi	r20, 0x80	; 128
 320:	5f e3       	ldi	r21, 0x3F	; 63
 322:	fb d0       	rcall	.+502    	; 0x51a <__subsf3>
 324:	20 e0       	ldi	r18, 0x00	; 0
 326:	30 e4       	ldi	r19, 0x40	; 64
 328:	4c e1       	ldi	r20, 0x1C	; 28
 32a:	56 e4       	ldi	r21, 0x46	; 70
 32c:	c7 d2       	rcall	.+1422   	; 0x8bc <__mulsf3>
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:31
  logR2 = log(R2);
 32e:	86 d2       	rcall	.+1292   	; 0x83c <log>
 330:	6b 01       	movw	r12, r22
 332:	7c 01       	movw	r14, r24
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:32
  T = (1.0 / (c1 + c2*logR2 + c3*logR2*logR2*logR2));
 334:	2c e6       	ldi	r18, 0x6C	; 108
 336:	3f ec       	ldi	r19, 0xCF	; 207
 338:	48 e5       	ldi	r20, 0x58	; 88
 33a:	54 e3       	ldi	r21, 0x34	; 52
 33c:	bf d2       	rcall	.+1406   	; 0x8bc <__mulsf3>
 33e:	a7 01       	movw	r20, r14
 340:	96 01       	movw	r18, r12
 342:	bc d2       	rcall	.+1400   	; 0x8bc <__mulsf3>
 344:	a7 01       	movw	r20, r14
 346:	96 01       	movw	r18, r12
 348:	b9 d2       	rcall	.+1394   	; 0x8bc <__mulsf3>
 34a:	4b 01       	movw	r8, r22
 34c:	5c 01       	movw	r10, r24
 34e:	26 ed       	ldi	r18, 0xD6	; 214
 350:	34 e6       	ldi	r19, 0x64	; 100
 352:	49 e7       	ldi	r20, 0x79	; 121
 354:	59 e3       	ldi	r21, 0x39	; 57
 356:	c7 01       	movw	r24, r14
 358:	b6 01       	movw	r22, r12
 35a:	b0 d2       	rcall	.+1376   	; 0x8bc <__mulsf3>
 35c:	2b ec       	ldi	r18, 0xCB	; 203
 35e:	38 e4       	ldi	r19, 0x48	; 72
 360:	44 e8       	ldi	r20, 0x84	; 132
 362:	5a e3       	ldi	r21, 0x3A	; 58
 364:	db d0       	rcall	.+438    	; 0x51c <__addsf3>
 366:	9b 01       	movw	r18, r22
 368:	ac 01       	movw	r20, r24
 36a:	c5 01       	movw	r24, r10
 36c:	b4 01       	movw	r22, r8
 36e:	d6 d0       	rcall	.+428    	; 0x51c <__addsf3>
 370:	9b 01       	movw	r18, r22
 372:	ac 01       	movw	r20, r24
 374:	60 e0       	ldi	r22, 0x00	; 0
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	80 e8       	ldi	r24, 0x80	; 128
 37a:	9f e3       	ldi	r25, 0x3F	; 63
 37c:	33 d1       	rcall	.+614    	; 0x5e4 <__divsf3>
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:33
  T = T - 273.15;
 37e:	23 e3       	ldi	r18, 0x33	; 51
 380:	33 e9       	ldi	r19, 0x93	; 147
 382:	48 e8       	ldi	r20, 0x88	; 136
 384:	53 e4       	ldi	r21, 0x43	; 67
 386:	c9 d0       	rcall	.+402    	; 0x51a <__subsf3>
 388:	4b 01       	movw	r8, r22
 38a:	5c 01       	movw	r10, r24
 38c:	80 92 69 00 	sts	0x0069, r8	; 0x800069 <T>
 390:	90 92 6a 00 	sts	0x006A, r9	; 0x80006a <T+0x1>
 394:	a0 92 6b 00 	sts	0x006B, r10	; 0x80006b <T+0x2>
 398:	b0 92 6c 00 	sts	0x006C, r11	; 0x80006c <T+0x3>
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:35

  int offset = analogRead(PotiPin);
 39c:	82 e8       	ldi	r24, 0x82	; 130
 39e:	ed de       	rcall	.-550    	; 0x17a <analogRead>
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:36
  offset = map(offset, 0, 1023, 100, 200);
 3a0:	bc 01       	movw	r22, r24
 3a2:	99 0f       	add	r25, r25
 3a4:	88 0b       	sbc	r24, r24
 3a6:	99 0b       	sbc	r25, r25
map():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/WMath.cpp:56
 3a8:	24 e6       	ldi	r18, 0x64	; 100
 3aa:	30 e0       	ldi	r19, 0x00	; 0
 3ac:	40 e0       	ldi	r20, 0x00	; 0
 3ae:	50 e0       	ldi	r21, 0x00	; 0
 3b0:	5d d0       	rcall	.+186    	; 0x46c <__mulsi3>
 3b2:	a3 01       	movw	r20, r6
 3b4:	92 01       	movw	r18, r4
 3b6:	73 d0       	rcall	.+230    	; 0x49e <__divmodsi4>
 3b8:	69 01       	movw	r12, r18
 3ba:	7a 01       	movw	r14, r20
 3bc:	f4 e6       	ldi	r31, 0x64	; 100
 3be:	cf 0e       	add	r12, r31
 3c0:	d1 1c       	adc	r13, r1
 3c2:	e1 1c       	adc	r14, r1
 3c4:	f1 1c       	adc	r15, r1
loop():
C:\Users\Thaddaeus\Nextcloud\T4\Projekte\KI\Attiny_KI_MFA_2.0/Attiny_KI_MFA_2.0.ino:38
  
  lm317 = T * (-0.6) + offset;
 3c6:	2a e9       	ldi	r18, 0x9A	; 154
 3c8:	39 e9       	ldi	r19, 0x99	; 153
 3ca:	49 e1       	ldi	r20, 0x19	; 25
 3cc:	5f eb       	ldi	r21, 0xBF	; 191
 3ce:	c5 01       	movw	r24, r10
 3d0:	b4 01       	movw	r22, r8
 3d2:	74 d2       	rcall	.+1256   	; 0x8bc <__mulsf3>
 3d4:	4b 01       	movw	r8, r22
 3d6:	5c 01       	movw	r10, r24
 3d8:	b6 01       	movw	r22, r12
 3da:	dd 0c       	add	r13, r13
 3dc:	88 0b       	sbc	r24, r24
 3de:	99 0b       	sbc	r25, r25
 3e0:	9c d1       	rcall	.+824    	; 0x71a <__floatsisf>
 3e2:	9b 01       	movw	r18, r22
 3e4:	ac 01       	movw	r20, r24
 3e6:	c5 01       	movw	r24, r10
 3e8:	b4 01       	movw	r22, r8
 3ea:	98 d0       	rcall	.+304    	; 0x51c <__addsf3>
 3ec:	63 d1       	rcall	.+710    	; 0x6b4 <__fixsfsi>
 3ee:	16 2f       	mov	r17, r22
 3f0:	c6 2f       	mov	r28, r22
 3f2:	d7 2f       	mov	r29, r23
analogWrite():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:101
  // We need to make sure the PWM output is enabled for those pins
  // that support it, as we turn it off when digitally reading or
  // writing with them.  Also, make sure the pin is in output mode
  // for consistenty with Wiring, which doesn't require a pinMode
  // call for the analog output pins.
  pinMode(pin, OUTPUT);
 3f4:	a6 de       	rcall	.-692    	; 0x142 <pinMode.constprop.3>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:103

  if (val <= 0)
 3f6:	1c 16       	cp	r1, r28
 3f8:	1d 06       	cpc	r1, r29
 3fa:	8c f0       	brlt	.+34     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:105
  {
    digitalWrite(pin, LOW);
 3fc:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:109
  }
  else if (val >= 255)
  {
    digitalWrite(pin, HIGH);
 3fe:	67 de       	rcall	.-818    	; 0xce <digitalWrite.constprop.4>
 400:	7e cf       	rjmp	.-260    	; 0x2fe <main+0x90>
delay():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:286
    yield();
    while (((uint16_t)micros() - start) >= 1000 && ms) {
 402:	c1 14       	cp	r12, r1
 404:	d1 04       	cpc	r13, r1
 406:	e1 04       	cpc	r14, r1
 408:	f1 04       	cpc	r15, r1
 40a:	09 f4       	brne	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40c:	6e cf       	rjmp	.-292    	; 0x2ea <main+0x7c>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:287
      ms--;
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	c8 1a       	sub	r12, r24
 412:	d1 08       	sbc	r13, r1
 414:	e1 08       	sbc	r14, r1
 416:	f1 08       	sbc	r15, r1
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring.c:288
      start += 1000;
 418:	c8 51       	subi	r28, 0x18	; 24
 41a:	dc 4f       	sbci	r29, 0xFC	; 252
 41c:	5a cf       	rjmp	.-332    	; 0x2d2 <main+0x64>
analogWrite():
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:107

  if (val <= 0)
  {
    digitalWrite(pin, LOW);
  }
  else if (val >= 255)
 41e:	cf 3f       	cpi	r28, 0xFF	; 255
 420:	d1 05       	cpc	r29, r1
 422:	14 f0       	brlt	.+4      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:109
  {
    digitalWrite(pin, HIGH);
 424:	81 e0       	ldi	r24, 0x01	; 1
 426:	eb cf       	rjmp	.-42     	; 0x3fe <main+0x190>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:113
  }
  else
  {
    uint8_t timer = digitalPinToTimer(pin);
 428:	f1 01       	movw	r30, r2
 42a:	84 91       	lpm	r24, Z
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:115
  #if defined(TCCR0A) && defined(COM0A1)
  if( timer == TIMER0A){
 42c:	81 30       	cpi	r24, 0x01	; 1
 42e:	29 f4       	brne	.+10     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:117
    // connect pwm to pin on timer 0, channel A
    sbi(TCCR0A, COM0A1);
 430:	8a b5       	in	r24, 0x2a	; 42
 432:	80 68       	ori	r24, 0x80	; 128
 434:	8a bd       	out	0x2a, r24	; 42
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:119
    //cbi(TCCR0A, COM0A0);
    OCR0A = val; // set pwm duty
 436:	19 bd       	out	0x29, r17	; 41
 438:	62 cf       	rjmp	.-316    	; 0x2fe <main+0x90>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:124
  } else
  #endif

  #if defined(TCCR0A) && defined(COM0B1)
  if( timer == TIMER0B){
 43a:	82 30       	cpi	r24, 0x02	; 2
 43c:	29 f4       	brne	.+10     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:126
    // connect pwm to pin on timer 0, channel B
    sbi(TCCR0A, COM0B1);
 43e:	8a b5       	in	r24, 0x2a	; 42
 440:	80 62       	ori	r24, 0x20	; 32
 442:	8a bd       	out	0x2a, r24	; 42
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:128
    //cbi(TCCR0A, COM0B0);
    OCR0B = val; // set pwm duty
 444:	18 bd       	out	0x28, r17	; 40
 446:	5b cf       	rjmp	.-330    	; 0x2fe <main+0x90>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:172
    OCR1D = val; // set pwm duty
  } else
  #endif

  #if defined(TCCR1) && defined(COM1A1) //Tiny85
  if(timer == TIMER1A){
 448:	83 30       	cpi	r24, 0x03	; 3
 44a:	29 f4       	brne	.+10     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:174
    // connect pwm to pin on timer 1, channel A
    sbi(TCCR1, COM1A1);
 44c:	80 b7       	in	r24, 0x30	; 48
 44e:	80 62       	ori	r24, 0x20	; 32
 450:	80 bf       	out	0x30, r24	; 48
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:176
    //cbi(TCCR1, COM1A0);
    OCR1A = val; // set pwm duty
 452:	1e bd       	out	0x2e, r17	; 46
 454:	54 cf       	rjmp	.-344    	; 0x2fe <main+0x90>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:196
    OCR1B = val; // set pwm duty
  } else
  #endif

  #if defined(TCCR1) && defined(COM1B1)
  if( timer == TIMER1B){
 456:	84 30       	cpi	r24, 0x04	; 4
 458:	29 f4       	brne	.+10     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:198
    // connect pwm to pin on timer 1, channel B
    sbi(GTCCR, COM1B1);
 45a:	8c b5       	in	r24, 0x2c	; 44
 45c:	80 62       	ori	r24, 0x20	; 32
 45e:	8c bd       	out	0x2c, r24	; 44
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:200
    //cbi(GTCCR, COM1B0);
    OCR1B = val; // set pwm duty
 460:	1b bd       	out	0x2b, r17	; 43
 462:	4d cf       	rjmp	.-358    	; 0x2fe <main+0x90>
C:\Users\Thaddaeus\AppData\Local\Arduino15\packages\ATTinyCore\hardware\avr\1.3.3\cores\tiny/wiring_analog.c:205
  } else
  #endif

    {
      if (val < 128)
 464:	c0 38       	cpi	r28, 0x80	; 128
 466:	d1 05       	cpc	r29, r1
 468:	ec f6       	brge	.-70     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 46a:	c8 cf       	rjmp	.-112    	; 0x3fc <main+0x18e>

0000046c <__mulsi3>:
__mulsi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:445
 46c:	ee 27       	eor	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:446
 46e:	ff 27       	eor	r31, r31

00000470 <__mulsi3_helper>:
__mulsi3_helper():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:451
 470:	aa 27       	eor	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:452
 472:	bb 27       	eor	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:453
 474:	08 c0       	rjmp	.+16     	; 0x486 <__mulsi3_helper+0x16>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:457
 476:	a2 0f       	add	r26, r18
 478:	b3 1f       	adc	r27, r19
 47a:	e4 1f       	adc	r30, r20
 47c:	f5 1f       	adc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:460
 47e:	22 0f       	add	r18, r18
 480:	33 1f       	adc	r19, r19
 482:	44 1f       	adc	r20, r20
 484:	55 1f       	adc	r21, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:463
 486:	96 95       	lsr	r25
 488:	87 95       	ror	r24
 48a:	77 95       	ror	r23
 48c:	67 95       	ror	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:465
 48e:	98 f3       	brcs	.-26     	; 0x476 <__mulsi3_helper+0x6>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:467
 490:	70 40       	sbci	r23, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:468
 492:	a9 f7       	brne	.-22     	; 0x47e <__mulsi3_helper+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:469
 494:	00 97       	sbiw	r24, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:470
 496:	99 f7       	brne	.-26     	; 0x47e <__mulsi3_helper+0xe>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:473
 498:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:474
 49a:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:480
 49c:	08 95       	ret

0000049e <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
 49e:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
 4a0:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
 4a2:	16 f4       	brtc	.+4      	; 0x4a8 <__divmodsi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
 4a4:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
 4a6:	0f d0       	rcall	.+30     	; 0x4c6 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
 4a8:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
 4aa:	05 d0       	rcall	.+10     	; 0x4b6 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
 4ac:	14 d0       	rcall	.+40     	; 0x4d6 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
 4ae:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
 4b0:	02 d0       	rcall	.+4      	; 0x4b6 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
 4b2:	46 f4       	brtc	.+16     	; 0x4c4 <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
 4b4:	08 c0       	rjmp	.+16     	; 0x4c6 <__negsi2>

000004b6 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
 4b6:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
 4b8:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
 4ba:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
 4bc:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
 4be:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
 4c0:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
 4c2:	5f 4f       	sbci	r21, 0xFF	; 255

000004c4 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
 4c4:	08 95       	ret

000004c6 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
 4c6:	90 95       	com	r25
 4c8:	80 95       	com	r24
 4ca:	70 95       	com	r23
 4cc:	61 95       	neg	r22
 4ce:	7f 4f       	sbci	r23, 0xFF	; 255
 4d0:	8f 4f       	sbci	r24, 0xFF	; 255
 4d2:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
 4d4:	08 95       	ret

000004d6 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
 4d6:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
 4d8:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
 4da:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
 4dc:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
 4de:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
 4e0:	0d c0       	rjmp	.+26     	; 0x4fc <__udivmodsi4_ep>

000004e2 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
 4e2:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
 4e4:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
 4e6:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
 4e8:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
 4ea:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
 4ec:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
 4ee:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
 4f0:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
 4f2:	20 f0       	brcs	.+8      	; 0x4fc <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
 4f4:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
 4f6:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
 4f8:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
 4fa:	f5 0b       	sbc	r31, r21

000004fc <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
 4fc:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
 4fe:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
 500:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
 502:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
 504:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
 506:	69 f7       	brne	.-38     	; 0x4e2 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
 508:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
 50a:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
 50c:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
 50e:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
 510:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
 512:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
 514:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
 516:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
 518:	08 95       	ret

0000051a <__subsf3>:
__subsf3():
 51a:	50 58       	subi	r21, 0x80	; 128

0000051c <__addsf3>:
 51c:	bb 27       	eor	r27, r27
 51e:	aa 27       	eor	r26, r26
 520:	0e d0       	rcall	.+28     	; 0x53e <__addsf3x>
 522:	4d c1       	rjmp	.+666    	; 0x7be <__fp_round>
__addsf3():
 524:	3e d1       	rcall	.+636    	; 0x7a2 <__fp_pscA>
 526:	30 f0       	brcs	.+12     	; 0x534 <__addsf3+0x18>
 528:	43 d1       	rcall	.+646    	; 0x7b0 <__fp_pscB>
 52a:	20 f0       	brcs	.+8      	; 0x534 <__addsf3+0x18>
 52c:	31 f4       	brne	.+12     	; 0x53a <__addsf3+0x1e>
 52e:	9f 3f       	cpi	r25, 0xFF	; 255
 530:	11 f4       	brne	.+4      	; 0x536 <__addsf3+0x1a>
 532:	1e f4       	brtc	.+6      	; 0x53a <__addsf3+0x1e>
 534:	33 c1       	rjmp	.+614    	; 0x79c <__fp_nan>
 536:	0e f4       	brtc	.+2      	; 0x53a <__addsf3+0x1e>
 538:	e0 95       	com	r30
 53a:	e7 fb       	bst	r30, 7
 53c:	29 c1       	rjmp	.+594    	; 0x790 <__fp_inf>

0000053e <__addsf3x>:
__addsf3x():
 53e:	e9 2f       	mov	r30, r25
 540:	4f d1       	rcall	.+670    	; 0x7e0 <__fp_split3>
 542:	80 f3       	brcs	.-32     	; 0x524 <__addsf3+0x8>
 544:	ba 17       	cp	r27, r26
 546:	62 07       	cpc	r22, r18
 548:	73 07       	cpc	r23, r19
 54a:	84 07       	cpc	r24, r20
 54c:	95 07       	cpc	r25, r21
 54e:	18 f0       	brcs	.+6      	; 0x556 <__addsf3x+0x18>
 550:	71 f4       	brne	.+28     	; 0x56e <__addsf3x+0x30>
 552:	9e f5       	brtc	.+102    	; 0x5ba <__addsf3x+0x7c>
 554:	67 c1       	rjmp	.+718    	; 0x824 <__fp_zero>
 556:	0e f4       	brtc	.+2      	; 0x55a <__addsf3x+0x1c>
 558:	e0 95       	com	r30
 55a:	0b 2e       	mov	r0, r27
 55c:	ba 2f       	mov	r27, r26
 55e:	a0 2d       	mov	r26, r0
 560:	0b 01       	movw	r0, r22
 562:	b9 01       	movw	r22, r18
 564:	90 01       	movw	r18, r0
 566:	0c 01       	movw	r0, r24
 568:	ca 01       	movw	r24, r20
 56a:	a0 01       	movw	r20, r0
 56c:	11 24       	eor	r1, r1
 56e:	ff 27       	eor	r31, r31
 570:	59 1b       	sub	r21, r25
 572:	99 f0       	breq	.+38     	; 0x59a <__addsf3x+0x5c>
 574:	59 3f       	cpi	r21, 0xF9	; 249
 576:	50 f4       	brcc	.+20     	; 0x58c <__addsf3x+0x4e>
 578:	50 3e       	cpi	r21, 0xE0	; 224
 57a:	68 f1       	brcs	.+90     	; 0x5d6 <__addsf3x+0x98>
 57c:	1a 16       	cp	r1, r26
 57e:	f0 40       	sbci	r31, 0x00	; 0
 580:	a2 2f       	mov	r26, r18
 582:	23 2f       	mov	r18, r19
 584:	34 2f       	mov	r19, r20
 586:	44 27       	eor	r20, r20
 588:	58 5f       	subi	r21, 0xF8	; 248
 58a:	f3 cf       	rjmp	.-26     	; 0x572 <__addsf3x+0x34>
 58c:	46 95       	lsr	r20
 58e:	37 95       	ror	r19
 590:	27 95       	ror	r18
 592:	a7 95       	ror	r26
 594:	f0 40       	sbci	r31, 0x00	; 0
 596:	53 95       	inc	r21
 598:	c9 f7       	brne	.-14     	; 0x58c <__addsf3x+0x4e>
 59a:	7e f4       	brtc	.+30     	; 0x5ba <__addsf3x+0x7c>
 59c:	1f 16       	cp	r1, r31
 59e:	ba 0b       	sbc	r27, r26
 5a0:	62 0b       	sbc	r22, r18
 5a2:	73 0b       	sbc	r23, r19
 5a4:	84 0b       	sbc	r24, r20
 5a6:	ba f0       	brmi	.+46     	; 0x5d6 <__addsf3x+0x98>
 5a8:	91 50       	subi	r25, 0x01	; 1
 5aa:	a1 f0       	breq	.+40     	; 0x5d4 <__addsf3x+0x96>
 5ac:	ff 0f       	add	r31, r31
 5ae:	bb 1f       	adc	r27, r27
 5b0:	66 1f       	adc	r22, r22
 5b2:	77 1f       	adc	r23, r23
 5b4:	88 1f       	adc	r24, r24
 5b6:	c2 f7       	brpl	.-16     	; 0x5a8 <__addsf3x+0x6a>
 5b8:	0e c0       	rjmp	.+28     	; 0x5d6 <__addsf3x+0x98>
 5ba:	ba 0f       	add	r27, r26
 5bc:	62 1f       	adc	r22, r18
 5be:	73 1f       	adc	r23, r19
 5c0:	84 1f       	adc	r24, r20
 5c2:	48 f4       	brcc	.+18     	; 0x5d6 <__addsf3x+0x98>
 5c4:	87 95       	ror	r24
 5c6:	77 95       	ror	r23
 5c8:	67 95       	ror	r22
 5ca:	b7 95       	ror	r27
 5cc:	f7 95       	ror	r31
 5ce:	9e 3f       	cpi	r25, 0xFE	; 254
 5d0:	08 f0       	brcs	.+2      	; 0x5d4 <__addsf3x+0x96>
 5d2:	b3 cf       	rjmp	.-154    	; 0x53a <__addsf3+0x1e>
 5d4:	93 95       	inc	r25
 5d6:	88 0f       	add	r24, r24
 5d8:	08 f0       	brcs	.+2      	; 0x5dc <__addsf3x+0x9e>
 5da:	99 27       	eor	r25, r25
 5dc:	ee 0f       	add	r30, r30
 5de:	97 95       	ror	r25
 5e0:	87 95       	ror	r24
 5e2:	08 95       	ret

000005e4 <__divsf3>:
 5e4:	0c d0       	rcall	.+24     	; 0x5fe <__divsf3x>
 5e6:	eb c0       	rjmp	.+470    	; 0x7be <__fp_round>
 5e8:	e3 d0       	rcall	.+454    	; 0x7b0 <__fp_pscB>
 5ea:	40 f0       	brcs	.+16     	; 0x5fc <__divsf3+0x18>
 5ec:	da d0       	rcall	.+436    	; 0x7a2 <__fp_pscA>
 5ee:	30 f0       	brcs	.+12     	; 0x5fc <__divsf3+0x18>
 5f0:	21 f4       	brne	.+8      	; 0x5fa <__divsf3+0x16>
 5f2:	5f 3f       	cpi	r21, 0xFF	; 255
 5f4:	19 f0       	breq	.+6      	; 0x5fc <__divsf3+0x18>
 5f6:	cc c0       	rjmp	.+408    	; 0x790 <__fp_inf>
 5f8:	51 11       	cpse	r21, r1
 5fa:	15 c1       	rjmp	.+554    	; 0x826 <__fp_szero>
 5fc:	cf c0       	rjmp	.+414    	; 0x79c <__fp_nan>

000005fe <__divsf3x>:
__divsf3x():
 5fe:	f0 d0       	rcall	.+480    	; 0x7e0 <__fp_split3>
 600:	98 f3       	brcs	.-26     	; 0x5e8 <__divsf3+0x4>

00000602 <__divsf3_pse>:
 602:	99 23       	and	r25, r25
 604:	c9 f3       	breq	.-14     	; 0x5f8 <__divsf3+0x14>
 606:	55 23       	and	r21, r21
 608:	b1 f3       	breq	.-20     	; 0x5f6 <__divsf3+0x12>
 60a:	95 1b       	sub	r25, r21
 60c:	55 0b       	sbc	r21, r21
 60e:	bb 27       	eor	r27, r27
 610:	aa 27       	eor	r26, r26
 612:	62 17       	cp	r22, r18
 614:	73 07       	cpc	r23, r19
 616:	84 07       	cpc	r24, r20
 618:	38 f0       	brcs	.+14     	; 0x628 <__divsf3_pse+0x26>
 61a:	9f 5f       	subi	r25, 0xFF	; 255
 61c:	5f 4f       	sbci	r21, 0xFF	; 255
 61e:	22 0f       	add	r18, r18
 620:	33 1f       	adc	r19, r19
 622:	44 1f       	adc	r20, r20
 624:	aa 1f       	adc	r26, r26
 626:	a9 f3       	breq	.-22     	; 0x612 <__divsf3_pse+0x10>
 628:	33 d0       	rcall	.+102    	; 0x690 <__divsf3_pse+0x8e>
 62a:	0e 2e       	mov	r0, r30
 62c:	3a f0       	brmi	.+14     	; 0x63c <__divsf3_pse+0x3a>
 62e:	e0 e8       	ldi	r30, 0x80	; 128
 630:	30 d0       	rcall	.+96     	; 0x692 <__divsf3_pse+0x90>
 632:	91 50       	subi	r25, 0x01	; 1
 634:	50 40       	sbci	r21, 0x00	; 0
 636:	e6 95       	lsr	r30
 638:	00 1c       	adc	r0, r0
 63a:	ca f7       	brpl	.-14     	; 0x62e <__divsf3_pse+0x2c>
 63c:	29 d0       	rcall	.+82     	; 0x690 <__divsf3_pse+0x8e>
 63e:	fe 2f       	mov	r31, r30
 640:	27 d0       	rcall	.+78     	; 0x690 <__divsf3_pse+0x8e>
 642:	66 0f       	add	r22, r22
 644:	77 1f       	adc	r23, r23
 646:	88 1f       	adc	r24, r24
 648:	bb 1f       	adc	r27, r27
 64a:	26 17       	cp	r18, r22
 64c:	37 07       	cpc	r19, r23
 64e:	48 07       	cpc	r20, r24
 650:	ab 07       	cpc	r26, r27
 652:	b0 e8       	ldi	r27, 0x80	; 128
 654:	09 f0       	breq	.+2      	; 0x658 <__divsf3_pse+0x56>
 656:	bb 0b       	sbc	r27, r27
 658:	80 2d       	mov	r24, r0
 65a:	bf 01       	movw	r22, r30
 65c:	ff 27       	eor	r31, r31
 65e:	93 58       	subi	r25, 0x83	; 131
 660:	5f 4f       	sbci	r21, 0xFF	; 255
 662:	2a f0       	brmi	.+10     	; 0x66e <__divsf3_pse+0x6c>
 664:	9e 3f       	cpi	r25, 0xFE	; 254
 666:	51 05       	cpc	r21, r1
 668:	68 f0       	brcs	.+26     	; 0x684 <__divsf3_pse+0x82>
 66a:	92 c0       	rjmp	.+292    	; 0x790 <__fp_inf>
 66c:	dc c0       	rjmp	.+440    	; 0x826 <__fp_szero>
 66e:	5f 3f       	cpi	r21, 0xFF	; 255
 670:	ec f3       	brlt	.-6      	; 0x66c <__divsf3_pse+0x6a>
 672:	98 3e       	cpi	r25, 0xE8	; 232
 674:	dc f3       	brlt	.-10     	; 0x66c <__divsf3_pse+0x6a>
 676:	86 95       	lsr	r24
 678:	77 95       	ror	r23
 67a:	67 95       	ror	r22
 67c:	b7 95       	ror	r27
 67e:	f7 95       	ror	r31
 680:	9f 5f       	subi	r25, 0xFF	; 255
 682:	c9 f7       	brne	.-14     	; 0x676 <__divsf3_pse+0x74>
 684:	88 0f       	add	r24, r24
 686:	91 1d       	adc	r25, r1
 688:	96 95       	lsr	r25
 68a:	87 95       	ror	r24
 68c:	97 f9       	bld	r25, 7
 68e:	08 95       	ret
 690:	e1 e0       	ldi	r30, 0x01	; 1
 692:	66 0f       	add	r22, r22
 694:	77 1f       	adc	r23, r23
 696:	88 1f       	adc	r24, r24
 698:	bb 1f       	adc	r27, r27
 69a:	62 17       	cp	r22, r18
 69c:	73 07       	cpc	r23, r19
 69e:	84 07       	cpc	r24, r20
 6a0:	ba 07       	cpc	r27, r26
 6a2:	20 f0       	brcs	.+8      	; 0x6ac <__divsf3_pse+0xaa>
 6a4:	62 1b       	sub	r22, r18
 6a6:	73 0b       	sbc	r23, r19
 6a8:	84 0b       	sbc	r24, r20
 6aa:	ba 0b       	sbc	r27, r26
 6ac:	ee 1f       	adc	r30, r30
 6ae:	88 f7       	brcc	.-30     	; 0x692 <__divsf3_pse+0x90>
 6b0:	e0 95       	com	r30
 6b2:	08 95       	ret

000006b4 <__fixsfsi>:
 6b4:	04 d0       	rcall	.+8      	; 0x6be <__fixunssfsi>
 6b6:	68 94       	set
 6b8:	b1 11       	cpse	r27, r1
 6ba:	b5 c0       	rjmp	.+362    	; 0x826 <__fp_szero>
 6bc:	08 95       	ret

000006be <__fixunssfsi>:
 6be:	98 d0       	rcall	.+304    	; 0x7f0 <__fp_splitA>
 6c0:	88 f0       	brcs	.+34     	; 0x6e4 <__fixunssfsi+0x26>
 6c2:	9f 57       	subi	r25, 0x7F	; 127
 6c4:	90 f0       	brcs	.+36     	; 0x6ea <__fixunssfsi+0x2c>
 6c6:	b9 2f       	mov	r27, r25
 6c8:	99 27       	eor	r25, r25
__fixunssfsi():
 6ca:	b7 51       	subi	r27, 0x17	; 23
 6cc:	a0 f0       	brcs	.+40     	; 0x6f6 <__fixunssfsi+0x38>
 6ce:	d1 f0       	breq	.+52     	; 0x704 <__fixunssfsi+0x46>
 6d0:	66 0f       	add	r22, r22
 6d2:	77 1f       	adc	r23, r23
 6d4:	88 1f       	adc	r24, r24
 6d6:	99 1f       	adc	r25, r25
 6d8:	1a f0       	brmi	.+6      	; 0x6e0 <__fixunssfsi+0x22>
 6da:	ba 95       	dec	r27
 6dc:	c9 f7       	brne	.-14     	; 0x6d0 <__fixunssfsi+0x12>
 6de:	12 c0       	rjmp	.+36     	; 0x704 <__fixunssfsi+0x46>
 6e0:	b1 30       	cpi	r27, 0x01	; 1
 6e2:	81 f0       	breq	.+32     	; 0x704 <__fixunssfsi+0x46>
 6e4:	9f d0       	rcall	.+318    	; 0x824 <__fp_zero>
 6e6:	b1 e0       	ldi	r27, 0x01	; 1
 6e8:	08 95       	ret
 6ea:	9c c0       	rjmp	.+312    	; 0x824 <__fp_zero>
 6ec:	67 2f       	mov	r22, r23
 6ee:	78 2f       	mov	r23, r24
 6f0:	88 27       	eor	r24, r24
 6f2:	b8 5f       	subi	r27, 0xF8	; 248
 6f4:	39 f0       	breq	.+14     	; 0x704 <__fixunssfsi+0x46>
 6f6:	b9 3f       	cpi	r27, 0xF9	; 249
 6f8:	cc f3       	brlt	.-14     	; 0x6ec <__fixunssfsi+0x2e>
 6fa:	86 95       	lsr	r24
 6fc:	77 95       	ror	r23
 6fe:	67 95       	ror	r22
 700:	b3 95       	inc	r27
 702:	d9 f7       	brne	.-10     	; 0x6fa <__fixunssfsi+0x3c>
 704:	3e f4       	brtc	.+14     	; 0x714 <__fixunssfsi+0x56>
 706:	90 95       	com	r25
 708:	80 95       	com	r24
 70a:	70 95       	com	r23
 70c:	61 95       	neg	r22
 70e:	7f 4f       	sbci	r23, 0xFF	; 255
 710:	8f 4f       	sbci	r24, 0xFF	; 255
 712:	9f 4f       	sbci	r25, 0xFF	; 255
 714:	08 95       	ret

00000716 <__floatunsisf>:
__floatunsisf():
 716:	e8 94       	clt
 718:	09 c0       	rjmp	.+18     	; 0x72c <__floatsisf+0x12>

0000071a <__floatsisf>:
 71a:	97 fb       	bst	r25, 7
 71c:	3e f4       	brtc	.+14     	; 0x72c <__floatsisf+0x12>
 71e:	90 95       	com	r25
 720:	80 95       	com	r24
 722:	70 95       	com	r23
 724:	61 95       	neg	r22
 726:	7f 4f       	sbci	r23, 0xFF	; 255
 728:	8f 4f       	sbci	r24, 0xFF	; 255
 72a:	9f 4f       	sbci	r25, 0xFF	; 255
 72c:	99 23       	and	r25, r25
 72e:	a9 f0       	breq	.+42     	; 0x75a <__floatsisf+0x40>
 730:	f9 2f       	mov	r31, r25
 732:	96 e9       	ldi	r25, 0x96	; 150
 734:	bb 27       	eor	r27, r27
 736:	93 95       	inc	r25
 738:	f6 95       	lsr	r31
 73a:	87 95       	ror	r24
 73c:	77 95       	ror	r23
 73e:	67 95       	ror	r22
 740:	b7 95       	ror	r27
 742:	f1 11       	cpse	r31, r1
 744:	f8 cf       	rjmp	.-16     	; 0x736 <__floatsisf+0x1c>
 746:	fa f4       	brpl	.+62     	; 0x786 <__floatsisf+0x6c>
 748:	bb 0f       	add	r27, r27
 74a:	11 f4       	brne	.+4      	; 0x750 <__floatsisf+0x36>
 74c:	60 ff       	sbrs	r22, 0
 74e:	1b c0       	rjmp	.+54     	; 0x786 <__floatsisf+0x6c>
 750:	6f 5f       	subi	r22, 0xFF	; 255
 752:	7f 4f       	sbci	r23, 0xFF	; 255
 754:	8f 4f       	sbci	r24, 0xFF	; 255
 756:	9f 4f       	sbci	r25, 0xFF	; 255
 758:	16 c0       	rjmp	.+44     	; 0x786 <__floatsisf+0x6c>
 75a:	88 23       	and	r24, r24
 75c:	11 f0       	breq	.+4      	; 0x762 <__floatsisf+0x48>
 75e:	96 e9       	ldi	r25, 0x96	; 150
 760:	11 c0       	rjmp	.+34     	; 0x784 <__floatsisf+0x6a>
 762:	77 23       	and	r23, r23
 764:	21 f0       	breq	.+8      	; 0x76e <__floatsisf+0x54>
 766:	9e e8       	ldi	r25, 0x8E	; 142
 768:	87 2f       	mov	r24, r23
 76a:	76 2f       	mov	r23, r22
 76c:	05 c0       	rjmp	.+10     	; 0x778 <__floatsisf+0x5e>
 76e:	66 23       	and	r22, r22
 770:	71 f0       	breq	.+28     	; 0x78e <__floatsisf+0x74>
 772:	96 e8       	ldi	r25, 0x86	; 134
 774:	86 2f       	mov	r24, r22
 776:	70 e0       	ldi	r23, 0x00	; 0
 778:	60 e0       	ldi	r22, 0x00	; 0
 77a:	2a f0       	brmi	.+10     	; 0x786 <__floatsisf+0x6c>
 77c:	9a 95       	dec	r25
 77e:	66 0f       	add	r22, r22
 780:	77 1f       	adc	r23, r23
 782:	88 1f       	adc	r24, r24
 784:	da f7       	brpl	.-10     	; 0x77c <__floatsisf+0x62>
 786:	88 0f       	add	r24, r24
 788:	96 95       	lsr	r25
 78a:	87 95       	ror	r24
 78c:	97 f9       	bld	r25, 7
 78e:	08 95       	ret

00000790 <__fp_inf>:
__fp_inf():
 790:	97 f9       	bld	r25, 7
 792:	9f 67       	ori	r25, 0x7F	; 127
 794:	80 e8       	ldi	r24, 0x80	; 128
 796:	70 e0       	ldi	r23, 0x00	; 0
 798:	60 e0       	ldi	r22, 0x00	; 0
 79a:	08 95       	ret

0000079c <__fp_nan>:
__fp_nan():
 79c:	9f ef       	ldi	r25, 0xFF	; 255
 79e:	80 ec       	ldi	r24, 0xC0	; 192
 7a0:	08 95       	ret

000007a2 <__fp_pscA>:
__fp_pscA():
 7a2:	00 24       	eor	r0, r0
 7a4:	0a 94       	dec	r0
 7a6:	16 16       	cp	r1, r22
 7a8:	17 06       	cpc	r1, r23
 7aa:	18 06       	cpc	r1, r24
 7ac:	09 06       	cpc	r0, r25
 7ae:	08 95       	ret

000007b0 <__fp_pscB>:
__fp_pscB():
 7b0:	00 24       	eor	r0, r0
 7b2:	0a 94       	dec	r0
 7b4:	12 16       	cp	r1, r18
 7b6:	13 06       	cpc	r1, r19
 7b8:	14 06       	cpc	r1, r20
 7ba:	05 06       	cpc	r0, r21
 7bc:	08 95       	ret

000007be <__fp_round>:
__fp_round():
 7be:	09 2e       	mov	r0, r25
 7c0:	03 94       	inc	r0
 7c2:	00 0c       	add	r0, r0
 7c4:	11 f4       	brne	.+4      	; 0x7ca <__fp_round+0xc>
 7c6:	88 23       	and	r24, r24
 7c8:	52 f0       	brmi	.+20     	; 0x7de <__fp_round+0x20>
 7ca:	bb 0f       	add	r27, r27
 7cc:	40 f4       	brcc	.+16     	; 0x7de <__fp_round+0x20>
 7ce:	bf 2b       	or	r27, r31
 7d0:	11 f4       	brne	.+4      	; 0x7d6 <__fp_round+0x18>
 7d2:	60 ff       	sbrs	r22, 0
 7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fp_round+0x20>
 7d6:	6f 5f       	subi	r22, 0xFF	; 255
 7d8:	7f 4f       	sbci	r23, 0xFF	; 255
 7da:	8f 4f       	sbci	r24, 0xFF	; 255
 7dc:	9f 4f       	sbci	r25, 0xFF	; 255
 7de:	08 95       	ret

000007e0 <__fp_split3>:
__fp_split3():
 7e0:	57 fd       	sbrc	r21, 7
 7e2:	90 58       	subi	r25, 0x80	; 128
 7e4:	44 0f       	add	r20, r20
 7e6:	55 1f       	adc	r21, r21
 7e8:	59 f0       	breq	.+22     	; 0x800 <__fp_splitA+0x10>
 7ea:	5f 3f       	cpi	r21, 0xFF	; 255
 7ec:	71 f0       	breq	.+28     	; 0x80a <__fp_splitA+0x1a>
 7ee:	47 95       	ror	r20

000007f0 <__fp_splitA>:
 7f0:	88 0f       	add	r24, r24
 7f2:	97 fb       	bst	r25, 7
 7f4:	99 1f       	adc	r25, r25
 7f6:	61 f0       	breq	.+24     	; 0x810 <__fp_splitA+0x20>
 7f8:	9f 3f       	cpi	r25, 0xFF	; 255
 7fa:	79 f0       	breq	.+30     	; 0x81a <__fp_splitA+0x2a>
 7fc:	87 95       	ror	r24
 7fe:	08 95       	ret
 800:	12 16       	cp	r1, r18
 802:	13 06       	cpc	r1, r19
 804:	14 06       	cpc	r1, r20
 806:	55 1f       	adc	r21, r21
 808:	f2 cf       	rjmp	.-28     	; 0x7ee <__fp_split3+0xe>
 80a:	46 95       	lsr	r20
 80c:	f1 df       	rcall	.-30     	; 0x7f0 <__fp_splitA>
 80e:	08 c0       	rjmp	.+16     	; 0x820 <__fp_splitA+0x30>
 810:	16 16       	cp	r1, r22
 812:	17 06       	cpc	r1, r23
 814:	18 06       	cpc	r1, r24
 816:	99 1f       	adc	r25, r25
 818:	f1 cf       	rjmp	.-30     	; 0x7fc <__fp_splitA+0xc>
 81a:	86 95       	lsr	r24
 81c:	71 05       	cpc	r23, r1
 81e:	61 05       	cpc	r22, r1
 820:	08 94       	sec
 822:	08 95       	ret

00000824 <__fp_zero>:
__fp_zero():
 824:	e8 94       	clt

00000826 <__fp_szero>:
 826:	bb 27       	eor	r27, r27
 828:	66 27       	eor	r22, r22
 82a:	77 27       	eor	r23, r23
 82c:	cb 01       	movw	r24, r22
 82e:	97 f9       	bld	r25, 7
 830:	08 95       	ret
__fp_szero():
 832:	0e f0       	brts	.+2      	; 0x836 <__fp_szero+0x10>
 834:	ae c0       	rjmp	.+348    	; 0x992 <__fp_mpack>
 836:	b2 cf       	rjmp	.-156    	; 0x79c <__fp_nan>
 838:	68 94       	set
 83a:	aa cf       	rjmp	.-172    	; 0x790 <__fp_inf>

0000083c <log>:
log():
 83c:	d9 df       	rcall	.-78     	; 0x7f0 <__fp_splitA>
 83e:	c8 f3       	brcs	.-14     	; 0x832 <__fp_szero+0xc>
 840:	99 23       	and	r25, r25
 842:	d1 f3       	breq	.-12     	; 0x838 <__fp_szero+0x12>
 844:	c6 f3       	brts	.-16     	; 0x836 <__fp_szero+0x10>
 846:	df 93       	push	r29
 848:	cf 93       	push	r28
 84a:	1f 93       	push	r17
 84c:	0f 93       	push	r16
 84e:	ff 92       	push	r15
 850:	c9 2f       	mov	r28, r25
 852:	dd 27       	eor	r29, r29
 854:	88 23       	and	r24, r24
 856:	2a f0       	brmi	.+10     	; 0x862 <log+0x26>
 858:	21 97       	sbiw	r28, 0x01	; 1
 85a:	66 0f       	add	r22, r22
 85c:	77 1f       	adc	r23, r23
 85e:	88 1f       	adc	r24, r24
 860:	da f7       	brpl	.-10     	; 0x858 <log+0x1c>
 862:	20 e0       	ldi	r18, 0x00	; 0
 864:	30 e0       	ldi	r19, 0x00	; 0
 866:	40 e8       	ldi	r20, 0x80	; 128
 868:	5f eb       	ldi	r21, 0xBF	; 191
 86a:	9f e3       	ldi	r25, 0x3F	; 63
 86c:	88 39       	cpi	r24, 0x98	; 152
 86e:	20 f0       	brcs	.+8      	; 0x878 <log+0x3c>
 870:	80 3e       	cpi	r24, 0xE0	; 224
 872:	30 f0       	brcs	.+12     	; 0x880 <log+0x44>
 874:	21 96       	adiw	r28, 0x01	; 1
 876:	8f 77       	andi	r24, 0x7F	; 127
 878:	51 de       	rcall	.-862    	; 0x51c <__addsf3>
 87a:	ee e1       	ldi	r30, 0x1E	; 30
 87c:	f0 e0       	ldi	r31, 0x00	; 0
 87e:	03 c0       	rjmp	.+6      	; 0x886 <log+0x4a>
 880:	4d de       	rcall	.-870    	; 0x51c <__addsf3>
 882:	eb e4       	ldi	r30, 0x4B	; 75
 884:	f0 e0       	ldi	r31, 0x00	; 0
 886:	93 d0       	rcall	.+294    	; 0x9ae <__fp_powser>
 888:	8b 01       	movw	r16, r22
 88a:	be 01       	movw	r22, r28
 88c:	ec 01       	movw	r28, r24
 88e:	fb 2e       	mov	r15, r27
 890:	6f 57       	subi	r22, 0x7F	; 127
 892:	71 09       	sbc	r23, r1
 894:	75 95       	asr	r23
 896:	77 1f       	adc	r23, r23
 898:	88 0b       	sbc	r24, r24
 89a:	99 0b       	sbc	r25, r25
 89c:	3e df       	rcall	.-388    	; 0x71a <__floatsisf>
 89e:	28 e1       	ldi	r18, 0x18	; 24
 8a0:	32 e7       	ldi	r19, 0x72	; 114
 8a2:	41 e3       	ldi	r20, 0x31	; 49
 8a4:	5f e3       	ldi	r21, 0x3F	; 63
 8a6:	15 d0       	rcall	.+42     	; 0x8d2 <__mulsf3x>
 8a8:	af 2d       	mov	r26, r15
 8aa:	98 01       	movw	r18, r16
 8ac:	ae 01       	movw	r20, r28
 8ae:	ff 90       	pop	r15
 8b0:	0f 91       	pop	r16
 8b2:	1f 91       	pop	r17
 8b4:	cf 91       	pop	r28
 8b6:	df 91       	pop	r29
 8b8:	42 de       	rcall	.-892    	; 0x53e <__addsf3x>
 8ba:	81 cf       	rjmp	.-254    	; 0x7be <__fp_round>

000008bc <__mulsf3>:
 8bc:	0a d0       	rcall	.+20     	; 0x8d2 <__mulsf3x>
 8be:	7f cf       	rjmp	.-258    	; 0x7be <__fp_round>
 8c0:	70 df       	rcall	.-288    	; 0x7a2 <__fp_pscA>
 8c2:	28 f0       	brcs	.+10     	; 0x8ce <__mulsf3+0x12>
 8c4:	75 df       	rcall	.-278    	; 0x7b0 <__fp_pscB>
__mulsf3():
 8c6:	18 f0       	brcs	.+6      	; 0x8ce <__mulsf3+0x12>
 8c8:	95 23       	and	r25, r21
 8ca:	09 f0       	breq	.+2      	; 0x8ce <__mulsf3+0x12>
 8cc:	61 cf       	rjmp	.-318    	; 0x790 <__fp_inf>
 8ce:	66 cf       	rjmp	.-308    	; 0x79c <__fp_nan>
 8d0:	aa cf       	rjmp	.-172    	; 0x826 <__fp_szero>

000008d2 <__mulsf3x>:
__mulsf3x():
 8d2:	86 df       	rcall	.-244    	; 0x7e0 <__fp_split3>
 8d4:	a8 f3       	brcs	.-22     	; 0x8c0 <__mulsf3+0x4>

000008d6 <__mulsf3_pse>:
 8d6:	99 23       	and	r25, r25
 8d8:	d9 f3       	breq	.-10     	; 0x8d0 <__mulsf3+0x14>
 8da:	55 23       	and	r21, r21
 8dc:	c9 f3       	breq	.-14     	; 0x8d0 <__mulsf3+0x14>
 8de:	95 0f       	add	r25, r21
 8e0:	50 e0       	ldi	r21, 0x00	; 0
 8e2:	55 1f       	adc	r21, r21
 8e4:	aa 27       	eor	r26, r26
 8e6:	ee 27       	eor	r30, r30
 8e8:	ff 27       	eor	r31, r31
 8ea:	bb 27       	eor	r27, r27
 8ec:	00 24       	eor	r0, r0
 8ee:	08 94       	sec
 8f0:	67 95       	ror	r22
 8f2:	20 f4       	brcc	.+8      	; 0x8fc <__mulsf3_pse+0x26>
 8f4:	e2 0f       	add	r30, r18
 8f6:	f3 1f       	adc	r31, r19
 8f8:	b4 1f       	adc	r27, r20
 8fa:	0a 1e       	adc	r0, r26
 8fc:	22 0f       	add	r18, r18
 8fe:	33 1f       	adc	r19, r19
 900:	44 1f       	adc	r20, r20
 902:	aa 1f       	adc	r26, r26
 904:	66 95       	lsr	r22
 906:	a9 f7       	brne	.-22     	; 0x8f2 <__mulsf3_pse+0x1c>
 908:	77 95       	ror	r23
 90a:	30 f4       	brcc	.+12     	; 0x918 <__mulsf3_pse+0x42>
 90c:	f3 0f       	add	r31, r19
 90e:	b4 1f       	adc	r27, r20
 910:	0a 1e       	adc	r0, r26
 912:	12 1e       	adc	r1, r18
 914:	08 f4       	brcc	.+2      	; 0x918 <__mulsf3_pse+0x42>
 916:	63 95       	inc	r22
 918:	33 0f       	add	r19, r19
 91a:	44 1f       	adc	r20, r20
 91c:	aa 1f       	adc	r26, r26
 91e:	22 1f       	adc	r18, r18
 920:	76 95       	lsr	r23
 922:	99 f7       	brne	.-26     	; 0x90a <__mulsf3_pse+0x34>
 924:	87 95       	ror	r24
 926:	20 f4       	brcc	.+8      	; 0x930 <__mulsf3_pse+0x5a>
 928:	b4 0f       	add	r27, r20
 92a:	0a 1e       	adc	r0, r26
 92c:	12 1e       	adc	r1, r18
 92e:	63 1f       	adc	r22, r19
 930:	44 0f       	add	r20, r20
 932:	aa 1f       	adc	r26, r26
 934:	22 1f       	adc	r18, r18
 936:	33 1f       	adc	r19, r19
 938:	86 95       	lsr	r24
 93a:	a9 f7       	brne	.-22     	; 0x926 <__mulsf3_pse+0x50>
 93c:	86 2f       	mov	r24, r22
 93e:	71 2d       	mov	r23, r1
 940:	60 2d       	mov	r22, r0
 942:	11 24       	eor	r1, r1
 944:	9f 57       	subi	r25, 0x7F	; 127
 946:	50 40       	sbci	r21, 0x00	; 0
 948:	8a f0       	brmi	.+34     	; 0x96c <__mulsf3_pse+0x96>
 94a:	e1 f0       	breq	.+56     	; 0x984 <__mulsf3_pse+0xae>
 94c:	88 23       	and	r24, r24
 94e:	4a f0       	brmi	.+18     	; 0x962 <__mulsf3_pse+0x8c>
 950:	ee 0f       	add	r30, r30
 952:	ff 1f       	adc	r31, r31
 954:	bb 1f       	adc	r27, r27
 956:	66 1f       	adc	r22, r22
 958:	77 1f       	adc	r23, r23
 95a:	88 1f       	adc	r24, r24
 95c:	91 50       	subi	r25, 0x01	; 1
 95e:	50 40       	sbci	r21, 0x00	; 0
 960:	a9 f7       	brne	.-22     	; 0x94c <__mulsf3_pse+0x76>
 962:	9e 3f       	cpi	r25, 0xFE	; 254
 964:	51 05       	cpc	r21, r1
 966:	70 f0       	brcs	.+28     	; 0x984 <__mulsf3_pse+0xae>
 968:	13 cf       	rjmp	.-474    	; 0x790 <__fp_inf>
 96a:	5d cf       	rjmp	.-326    	; 0x826 <__fp_szero>
 96c:	5f 3f       	cpi	r21, 0xFF	; 255
 96e:	ec f3       	brlt	.-6      	; 0x96a <__mulsf3_pse+0x94>
 970:	98 3e       	cpi	r25, 0xE8	; 232
 972:	dc f3       	brlt	.-10     	; 0x96a <__mulsf3_pse+0x94>
 974:	86 95       	lsr	r24
 976:	77 95       	ror	r23
 978:	67 95       	ror	r22
 97a:	b7 95       	ror	r27
 97c:	f7 95       	ror	r31
 97e:	e7 95       	ror	r30
 980:	9f 5f       	subi	r25, 0xFF	; 255
 982:	c1 f7       	brne	.-16     	; 0x974 <__mulsf3_pse+0x9e>
 984:	fe 2b       	or	r31, r30
 986:	88 0f       	add	r24, r24
 988:	91 1d       	adc	r25, r1
 98a:	96 95       	lsr	r25
 98c:	87 95       	ror	r24
 98e:	97 f9       	bld	r25, 7
 990:	08 95       	ret

00000992 <__fp_mpack>:
 992:	9f 3f       	cpi	r25, 0xFF	; 255
 994:	31 f0       	breq	.+12     	; 0x9a2 <__fp_mpack_finite+0xc>

00000996 <__fp_mpack_finite>:
 996:	91 50       	subi	r25, 0x01	; 1
 998:	20 f4       	brcc	.+8      	; 0x9a2 <__fp_mpack_finite+0xc>
 99a:	87 95       	ror	r24
 99c:	77 95       	ror	r23
 99e:	67 95       	ror	r22
 9a0:	b7 95       	ror	r27
 9a2:	88 0f       	add	r24, r24
__fp_mpack_finite():
 9a4:	91 1d       	adc	r25, r1
 9a6:	96 95       	lsr	r25
 9a8:	87 95       	ror	r24
 9aa:	97 f9       	bld	r25, 7
 9ac:	08 95       	ret

000009ae <__fp_powser>:
__fp_powser():
 9ae:	df 93       	push	r29
 9b0:	cf 93       	push	r28
 9b2:	1f 93       	push	r17
 9b4:	0f 93       	push	r16
 9b6:	ff 92       	push	r15
 9b8:	ef 92       	push	r14
 9ba:	df 92       	push	r13
 9bc:	7b 01       	movw	r14, r22
 9be:	8c 01       	movw	r16, r24
 9c0:	68 94       	set
 9c2:	05 c0       	rjmp	.+10     	; 0x9ce <__fp_powser+0x20>
 9c4:	da 2e       	mov	r13, r26
 9c6:	ef 01       	movw	r28, r30
 9c8:	84 df       	rcall	.-248    	; 0x8d2 <__mulsf3x>
 9ca:	fe 01       	movw	r30, r28
 9cc:	e8 94       	clt
 9ce:	a5 91       	lpm	r26, Z+
 9d0:	25 91       	lpm	r18, Z+
 9d2:	35 91       	lpm	r19, Z+
 9d4:	45 91       	lpm	r20, Z+
 9d6:	55 91       	lpm	r21, Z+
 9d8:	ae f3       	brts	.-22     	; 0x9c4 <__fp_powser+0x16>
 9da:	ef 01       	movw	r28, r30
 9dc:	b0 dd       	rcall	.-1184   	; 0x53e <__addsf3x>
 9de:	fe 01       	movw	r30, r28
 9e0:	97 01       	movw	r18, r14
 9e2:	a8 01       	movw	r20, r16
 9e4:	da 94       	dec	r13
 9e6:	79 f7       	brne	.-34     	; 0x9c6 <__fp_powser+0x18>
 9e8:	df 90       	pop	r13
 9ea:	ef 90       	pop	r14
 9ec:	ff 90       	pop	r15
 9ee:	0f 91       	pop	r16
 9f0:	1f 91       	pop	r17
 9f2:	cf 91       	pop	r28
 9f4:	df 91       	pop	r29
 9f6:	08 95       	ret

000009f8 <_exit>:
exit():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
 9f8:	f8 94       	cli

000009fa <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
 9fa:	ff cf       	rjmp	.-2      	; 0x9fa <__stop_program>
